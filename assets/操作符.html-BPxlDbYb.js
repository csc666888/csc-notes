import{_ as n,c as a,b as l,a as s,r as d,o as c}from"./app-DQXKICVf.js";const r={};function o(i,t){const e=d("Utterances");return c(),a("div",null,[t[0]||(t[0]=l(`<h1 id="javascript操作符" tabindex="-1"><a class="header-anchor" href="#javascript操作符"><span>JavaScript操作符</span></a></h1><h2 id="_1-算术操作符" tabindex="-1"><a class="header-anchor" href="#_1-算术操作符"><span>1. 算术操作符</span></a></h2><p>算术操作符用于执行数学运算，包括加法、减法、乘法、除法、取模等。</p><h3 id="_1-1-基本算术操作符" tabindex="-1"><a class="header-anchor" href="#_1-1-基本算术操作符"><span>1.1 基本算术操作符</span></a></h3><table><thead><tr><th style="text-align:center;">操作符</th><th style="text-align:center;">描述</th><th style="text-align:center;">示例</th></tr></thead><tbody><tr><td style="text-align:center;">+</td><td style="text-align:center;">加法</td><td style="text-align:center;"><code>5 + 2 = 7</code></td></tr><tr><td style="text-align:center;">-</td><td style="text-align:center;">减法</td><td style="text-align:center;"><code>5 - 2 = 3</code></td></tr><tr><td style="text-align:center;">*</td><td style="text-align:center;">乘法</td><td style="text-align:center;"><code>5 * 2 = 10</code></td></tr><tr><td style="text-align:center;">/</td><td style="text-align:center;">除法</td><td style="text-align:center;"><code>5 / 2 = 2.5</code></td></tr><tr><td style="text-align:center;">%</td><td style="text-align:center;">取模（余数）</td><td style="text-align:center;"><code>5 % 2 = 1</code></td></tr><tr><td style="text-align:center;">**</td><td style="text-align:center;">幂运算（ES2016新增）</td><td style="text-align:center;"><code>5 ** 2 = 25</code></td></tr></tbody></table><h3 id="_1-2-递增和递减操作符" tabindex="-1"><a class="header-anchor" href="#_1-2-递增和递减操作符"><span>1.2 递增和递减操作符</span></a></h3><table><thead><tr><th style="text-align:center;">操作符</th><th style="text-align:center;">描述</th><th style="text-align:center;">示例</th></tr></thead><tbody><tr><td style="text-align:center;">++</td><td style="text-align:center;">递增</td><td style="text-align:center;"><code>let a = 5; a++; // a = 6</code></td></tr><tr><td style="text-align:center;">--</td><td style="text-align:center;">递减</td><td style="text-align:center;"><code>let a = 5; a--; // a = 4</code></td></tr></tbody></table><h2 id="_2-比较操作符" tabindex="-1"><a class="header-anchor" href="#_2-比较操作符"><span>2. 比较操作符</span></a></h2><p>比较操作符用于比较两个值，返回布尔值（true或false）。</p><table><thead><tr><th style="text-align:center;">操作符</th><th style="text-align:center;">描述</th><th style="text-align:center;">示例</th></tr></thead><tbody><tr><td style="text-align:center;">==</td><td style="text-align:center;">相等</td><td style="text-align:center;"><code>5 == &quot;5&quot; // true</code></td></tr><tr><td style="text-align:center;">===</td><td style="text-align:center;">全等（值和类型都相等）</td><td style="text-align:center;"><code>5 === &quot;5&quot; // false</code></td></tr><tr><td style="text-align:center;">!=</td><td style="text-align:center;">不相等</td><td style="text-align:center;"><code>5 != &quot;6&quot; // true</code></td></tr><tr><td style="text-align:center;">!==</td><td style="text-align:center;">不全等</td><td style="text-align:center;"><code>5 !== &quot;5&quot; // true</code></td></tr><tr><td style="text-align:center;">&gt;</td><td style="text-align:center;">大于</td><td style="text-align:center;"><code>5 &gt; 3 // true</code></td></tr><tr><td style="text-align:center;">&lt;</td><td style="text-align:center;">小于</td><td style="text-align:center;"><code>5 &lt; 3 // false</code></td></tr><tr><td style="text-align:center;">&gt;=</td><td style="text-align:center;">大于等于</td><td style="text-align:center;"><code>5 &gt;= 5 // true</code></td></tr><tr><td style="text-align:center;">&lt;=</td><td style="text-align:center;">小于等于</td><td style="text-align:center;"><code>5 &lt;= 4 // false</code></td></tr></tbody></table><h2 id="_3-逻辑操作符" tabindex="-1"><a class="header-anchor" href="#_3-逻辑操作符"><span>3. 逻辑操作符</span></a></h2><p>逻辑操作符用于确定变量或值之间的逻辑关系。</p><table><thead><tr><th style="text-align:center;">操作符</th><th style="text-align:center;">描述</th><th style="text-align:center;">示例</th></tr></thead><tbody><tr><td style="text-align:center;">&amp;&amp;</td><td style="text-align:center;">逻辑与</td><td style="text-align:center;"><code>true &amp;&amp; false // false</code></td></tr><tr><td style="text-align:center;">||</td><td style="text-align:center;">逻辑或</td><td style="text-align:center;"><code>true || false // true</code></td></tr><tr><td style="text-align:center;">!</td><td style="text-align:center;">逻辑非</td><td style="text-align:center;"><code>!true // false</code></td></tr></tbody></table><h2 id="_4-位操作符" tabindex="-1"><a class="header-anchor" href="#_4-位操作符"><span>4. 位操作符</span></a></h2><p>位操作符用于操作数字的二进制位。</p><table><thead><tr><th style="text-align:center;">操作符</th><th style="text-align:center;">描述</th><th style="text-align:center;">示例</th></tr></thead><tbody><tr><td style="text-align:center;">&amp;</td><td style="text-align:center;">按位与</td><td style="text-align:center;"><code>5 &amp; 1 // 1</code></td></tr><tr><td style="text-align:center;">|</td><td style="text-align:center;">按位或</td><td style="text-align:center;"><code>5 | 1 // 5</code></td></tr><tr><td style="text-align:center;">^</td><td style="text-align:center;">按位异或</td><td style="text-align:center;"><code>5 ^ 1 // 4</code></td></tr><tr><td style="text-align:center;">~</td><td style="text-align:center;">按位非</td><td style="text-align:center;"><code>~5 // -6</code></td></tr><tr><td style="text-align:center;">&lt;&lt;</td><td style="text-align:center;">左移</td><td style="text-align:center;"><code>5 &lt;&lt; 1 // 10</code></td></tr><tr><td style="text-align:center;">&gt;&gt;</td><td style="text-align:center;">有符号右移</td><td style="text-align:center;"><code>5 &gt;&gt; 1 // 2</code></td></tr><tr><td style="text-align:center;">&gt;&gt;&gt;</td><td style="text-align:center;">无符号右移</td><td style="text-align:center;"><code>5 &gt;&gt;&gt; 1 // 2</code></td></tr></tbody></table><h2 id="_5-赋值操作符" tabindex="-1"><a class="header-anchor" href="#_5-赋值操作符"><span>5. 赋值操作符</span></a></h2><p>赋值操作符用于给变量赋值。</p><table><thead><tr><th style="text-align:center;">操作符</th><th style="text-align:center;">描述</th><th style="text-align:center;">示例</th></tr></thead><tbody><tr><td style="text-align:center;">=</td><td style="text-align:center;">赋值</td><td style="text-align:center;"><code>let a = 5;</code></td></tr><tr><td style="text-align:center;">+=</td><td style="text-align:center;">加法赋值</td><td style="text-align:center;"><code>let a = 5; a += 2; // a = 7</code></td></tr><tr><td style="text-align:center;">-=</td><td style="text-align:center;">减法赋值</td><td style="text-align:center;"><code>let a = 5; a -= 2; // a = 3</code></td></tr><tr><td style="text-align:center;">*=</td><td style="text-align:center;">乘法赋值</td><td style="text-align:center;"><code>let a = 5; a *= 2; // a = 10</code></td></tr><tr><td style="text-align:center;">/=</td><td style="text-align:center;">除法赋值</td><td style="text-align:center;"><code>let a = 5; a /= 2; // a = 2.5</code></td></tr><tr><td style="text-align:center;">%=</td><td style="text-align:center;">取模赋值</td><td style="text-align:center;"><code>let a = 5; a %= 2; // a = 1</code></td></tr></tbody></table><h2 id="_6-条件-三元-操作符" tabindex="-1"><a class="header-anchor" href="#_6-条件-三元-操作符"><span>6. 条件（三元）操作符</span></a></h2><p>条件操作符是JavaScript中唯一的三元操作符，常用于简化if-else语句。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">条件 <span class="token operator">?</span> 表达式<span class="token number">1</span> <span class="token operator">:</span> 表达式<span class="token number">2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果条件为true，则返回表达式1的值，否则返回表达式2的值。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> status <span class="token operator">=</span> <span class="token punctuation">(</span>age <span class="token operator">&gt;=</span> <span class="token number">18</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&quot;成年&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;未成年&quot;</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出：成年</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-逗号操作符" tabindex="-1"><a class="header-anchor" href="#_7-逗号操作符"><span>7. 逗号操作符</span></a></h2><p>逗号操作符可以在一条语句中执行多个操作，并返回最后一个表达式的值。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出：5</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-操作符优先级" tabindex="-1"><a class="header-anchor" href="#_8-操作符优先级"><span>8. 操作符优先级</span></a></h2><p>操作符优先级决定了表达式中操作符的执行顺序。优先级从高到低排列（部分）：</p><ol><li>小括号 <code>()</code></li><li>成员访问 <code>.</code>、计算成员访问 <code>[]</code>、<code>new</code>（带参数）、函数调用 <code>()</code></li><li><code>new</code>（无参数）</li><li>后置递增/递减 <code>++</code>/<code>--</code></li><li>逻辑非 <code>!</code>、按位非 <code>~</code>、一元加/减 <code>+</code>/<code>-</code>、前置递增/递减 <code>++</code>/<code>--</code>、<code>typeof</code>、<code>void</code>、<code>delete</code>、<code>await</code></li><li>幂 <code>**</code></li><li>乘法/除法/取模 <code>*</code>、<code>/</code>、<code>%</code></li><li>加法/减法 <code>+</code>、<code>-</code></li><li>位移 <code>&lt;&lt;</code>、<code>&gt;&gt;</code>、<code>&gt;&gt;&gt;</code></li><li>关系 <code>&lt;</code>、<code>&gt;</code>、<code>&lt;=</code>、<code>&gt;=</code>、<code>in</code>、<code>instanceof</code></li><li>相等 <code>==</code>、<code>!=</code>、<code>===</code>、<code>!==</code></li><li>按位与 <code>&amp;</code></li><li>按位异或 <code>^</code></li><li>按位或 <code>|</code></li><li>逻辑与 <code>&amp;&amp;</code></li><li>逻辑或 <code>||</code></li><li>条件（三元）操作符 <code>?:</code></li><li>赋值 <code>=</code>、<code>+=</code>、<code>-=</code>等</li><li>逗号 <code>,</code></li></ol><div class="hint-container tip"><p class="hint-container-title">提示</p><p>当有疑问时，可以使用括号明确指定运算顺序，提高代码可读性。</p></div>`,31)),s(e)])}const g=n(r,[["render",o]]),h=JSON.parse('{"path":"/notes/web/javascript/base/grammar/%E6%93%8D%E4%BD%9C%E7%AC%A6.html","title":"JavaScript操作符详解","lang":"zh-CN","frontmatter":{"title":"JavaScript操作符详解","meta":[{"name":"description","content":"本节将详细介绍JavaScript中的各种操作符，包括算术操作符、比较操作符、逻辑操作符、位操作符、赋值操作符等"},{"name":"keywords","content":"JavaScript, 操作符, 算术操作符, 比较操作符, 逻辑操作符, 位操作符, 赋值操作符, 条件操作符, 逗号操作符, 运算符优先级"}]},"headers":[{"level":2,"title":"1. 算术操作符","slug":"_1-算术操作符","link":"#_1-算术操作符","children":[{"level":3,"title":"1.1 基本算术操作符","slug":"_1-1-基本算术操作符","link":"#_1-1-基本算术操作符","children":[]},{"level":3,"title":"1.2 递增和递减操作符","slug":"_1-2-递增和递减操作符","link":"#_1-2-递增和递减操作符","children":[]}]},{"level":2,"title":"2. 比较操作符","slug":"_2-比较操作符","link":"#_2-比较操作符","children":[]},{"level":2,"title":"3. 逻辑操作符","slug":"_3-逻辑操作符","link":"#_3-逻辑操作符","children":[]},{"level":2,"title":"4. 位操作符","slug":"_4-位操作符","link":"#_4-位操作符","children":[]},{"level":2,"title":"5. 赋值操作符","slug":"_5-赋值操作符","link":"#_5-赋值操作符","children":[]},{"level":2,"title":"6. 条件（三元）操作符","slug":"_6-条件-三元-操作符","link":"#_6-条件-三元-操作符","children":[]},{"level":2,"title":"7. 逗号操作符","slug":"_7-逗号操作符","link":"#_7-逗号操作符","children":[]},{"level":2,"title":"8. 操作符优先级","slug":"_8-操作符优先级","link":"#_8-操作符优先级","children":[]}],"git":{"updatedTime":1747659450000,"contributors":[{"name":"chenshicong","username":"chenshicong","email":"chenshicong666@qq.com","commits":1,"url":"https://github.com/chenshicong"}],"changelog":[{"hash":"d78ea0ac931ae3ba09698cb79415ce6c1e5c2ac2","time":1747659450000,"email":"chenshicong666@qq.com","author":"chenshicong","message":"优化SEO"}]},"filePathRelative":"notes/web/javascript/base/grammar/操作符.md"}');export{g as comp,h as data};
